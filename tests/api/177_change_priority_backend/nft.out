table ip nftlb {
	map filter-proto-services {
		type inet_proto . ipv4_addr . inet_service : verdict
		elements = { tcp . 10.0.0.241 . 8080 : goto filter-newfarm }
	}

	map static-sessions-newfarm {
		type ipv4_addr : mark
		elements = { 192.168.44.4 : 0x00000200, 192.168.44.5 : 0x00000200,
			     192.168.44.6 : 0x00000202 }
	}

	map persist-newfarm {
		type ipv4_addr : mark
		size 65535
		timeout 33m20s
	}

	map nat-proto-services {
		type inet_proto . ipv4_addr . inet_service : verdict
		elements = { tcp . 10.0.0.241 . 8080 : goto nat-newfarm }
	}

	map services-back-m {
		type mark : ipv4_addr
		elements = { 0x00000202 : 10.0.0.241 }
	}

	map proto-services-back {
		type inet_proto . ipv4_addr . inet_service : ipv4_addr
	}

	chain filter {
		type filter hook prerouting priority mangle; policy accept;
		meta mark set ct mark
		ip protocol . ip daddr . th dport vmap @filter-proto-services
	}

	chain filter-newfarm {
		ct mark set ip saddr map @static-sessions-newfarm accept
		ct state new ct mark set ip saddr map @persist-newfarm
		ct state new ct mark 0x00000000 ct mark set jhash ip saddr mod 5 map { 0-4 : 0x00000202 }
		ct mark != 0x00000000 update @persist-newfarm { ip saddr : ct mark }
	}

	chain prerouting {
		type nat hook prerouting priority dstnat; policy accept;
		ip protocol . ip daddr . th dport vmap @nat-proto-services
	}

	chain postrouting {
		type nat hook postrouting priority srcnat; policy accept;
		ct mark 0x00000000 ct mark set meta mark
		ct mark 0x80000000/1 masquerade
		snat to ct mark map @services-back-m
		snat to ip protocol . ip daddr . th dport map @proto-services-back
	}

	chain nat-newfarm {
		ip protocol tcp dnat ip to ct mark map { 0x00000202 : 192.168.101.254 . 32 }
	}
}
