table ip nftlb {
	ct helper sip-tcp {
		type "sip" protocol tcp
		l3proto ip
	}

	ct helper sip-udp {
		type "sip" protocol udp
		l3proto ip
	}

	map filter-services {
		type inet_proto . ipv4_addr : verdict
		elements = { tcp . 192.168.56.101 : goto filter-newfarm,
			     udp . 192.168.56.101 : goto filter-newfarm,
			     sctp . 192.168.56.101 : goto filter-newfarm }
	}

	map nat-services {
		type inet_proto . ipv4_addr : verdict
		elements = { tcp . 192.168.56.101 : goto nat-newfarm,
			     udp . 192.168.56.101 : goto nat-newfarm,
			     sctp . 192.168.56.101 : goto nat-newfarm }
	}

	map services-back-m {
		type mark : ipv4_addr
		elements = { 0x00000200 : 192.168.56.101, 0x00000201 : 192.168.56.101 }
	}

	chain filter {
		type filter hook prerouting priority mangle; policy accept;
		meta mark 0x00000000 meta mark set ct mark
		ip protocol . ip daddr vmap @filter-services
	}

	chain filter-newfarm {
		ip protocol tcp ct helper set "sip-tcp"
		ip protocol udp ct helper set "sip-udp"
		ct state new ct mark 0x00000000 ct mark set numgen random mod 2 map { 0 : 0x00000200, 1 : 0x00000201 }
	}

	chain prerouting {
		type nat hook prerouting priority dstnat; policy accept;
		ct state new meta mark 0x00000000 meta mark set ct mark
		ip protocol . ip daddr vmap @nat-services
	}

	chain postrouting {
		type nat hook postrouting priority srcnat; policy accept;
		ct mark 0x00000000 ct mark set meta mark
		ct mark 0x80000000/1 masquerade
		snat to ct mark map @services-back-m
	}

	chain nat-newfarm {
		dnat to ct mark map { 0x00000200 : 192.168.56.102, 0x00000201 : 192.168.56.103 }
	}
}
